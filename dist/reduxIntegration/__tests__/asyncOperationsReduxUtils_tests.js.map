{"version":3,"sources":["../../../src/reduxIntegration/__tests__/asyncOperationsReduxUtils_tests.js"],"names":["describe","beforeEach","asyncOperationManagerConfig","setConfig","logger","exceptionsCallback","sinon","spy","it","descriptorId","requiredParams","operationType","initialAsyncOperationAction","teamId","fieldValues","name","title","configContainer","promiseCallbacks","to","deep","include","params"],"mappings":";;AACA;;AACA;;AAEA;;AAEA;;AAIA;;;;AAVA;AAgBAA,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzCC,EAAAA,UAAU,CAAC,YAAM;AACfC,oBAA4BC,SAA5B,CAAsC;AACpCC,MAAAA,MAAM,EAAE;AACNC,QAAAA,kBAAkB,EAAEC,eAAMC,GAAN;AADd;AAD4B,KAAtC;;AAMA;AACD,GARS,CAAV;AAUAP,EAAAA,QAAQ,CAAC,mCAAD,EAAsC,YAAM;AAClDQ,IAAAA,EAAE,CAAC,oEAAD,EAAuE,YAAM;AAC7E,yEAAkC;AAChCC,QAAAA,YAAY,EAAE,uBADkB;AAEhCC,QAAAA,cAAc,EAAE,CAAC,QAAD,CAFgB;AAGhCC,QAAAA,aAAa,EAAE;AAHiB,OAAlC;AAMA,UAAMC,2BAA2B,GAAG,iEAClC,uBADkC,EACT;AACvBC,QAAAA,MAAM,EAAE,CADe;AAEvBC,QAAAA,WAAW,EAAE;AACXC,UAAAA,IAAI,EAAE,QADK;AAEXC,UAAAA,KAAK,EAAE;AAFI,SAFU;AAMvBC,QAAAA,eAAe,EAAE,EANM;AAOvBC,QAAAA,gBAAgB,EAAE;AAPK,OADS,CAApC;AAYA,wBAAON,2BAAP,EAAoCO,EAApC,CAAuCC,IAAvC,CAA4CC,OAA5C,CAAoD;AAClDC,QAAAA,MAAM,EAAE;AACNT,UAAAA,MAAM,EAAE;AADF;AAD0C,OAApD;AAKD,KAxBC,CAAF;AAyBD,GA1BO,CAAR;AA2BD,CAtCO,CAAR","sourcesContent":["/* eslint-env jest */\nimport { expect } from 'chai';\nimport sinon from 'sinon';\n\nimport asyncOperationManagerConfig from '../../config';\n\nimport {\n  createAsyncOperationInitialAction,\n} from '../asyncOperationReduxUtils';\n\nimport {\n  clearAsyncOperationsManagerState,\n  registerAsyncOperationDescriptors,\n} from '../../asyncOperationManagerUtils';\n\n\ndescribe('asyncOperationReduxUtils', () => {\n  beforeEach(() => {\n    asyncOperationManagerConfig.setConfig({\n      logger: {\n        exceptionsCallback: sinon.spy(),\n      },\n    });\n\n    clearAsyncOperationsManagerState();\n  });\n\n  describe('createAsyncOperationInitialAction', () => {\n    it('should create an initial async operation action with a params prop', () => {\n      registerAsyncOperationDescriptors({\n        descriptorId: 'CREATE_PERSON_REQUEST',\n        requiredParams: ['teamId'],\n        operationType: 'WRITE',\n      });\n\n      const initialAsyncOperationAction = createAsyncOperationInitialAction(\n        'CREATE_PERSON_REQUEST', {\n          teamId: 3,\n          fieldValues: {\n            name: 'Darien',\n            title: 'Developer',\n          },\n          configContainer: {},\n          promiseCallbacks: {},\n        },\n      );\n\n      expect(initialAsyncOperationAction).to.deep.include({\n        params: {\n          teamId: 3,\n        },\n      });\n    });\n  });\n});\n"],"file":"asyncOperationsReduxUtils_tests.js"}